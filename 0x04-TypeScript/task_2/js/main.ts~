interface DirectorInterface {
	  workFromHome: () => string;
	  getCoffeeBreak: () => string;
	  workDirectorTasks: () => string;
}

interface TeacherInterface {
	  workFromHome: () => string;
	  getCoffeeBreak: () => string;
	  workTeacherTasks: () => string;
}

class Director implements DirectorInterface {
      workFromHome = (): string => "Working from home";
      getToWork = (): string => "Getting a coffee break";
      workDirectorTasks = (): string => "Getting to director tasks";
}

class Teacher implements TeacherInterface {
      workFromHome = (): string => "Cannot work from home";
      getCoffeeBreak = (): string => "Cannot have a break";
      workTeacherTasks = (): string => "Getting to work";
}

const createEmployee = (salary: number | string): Director | Teacher => {
      if ((typeof salary === "number") && (salary < 500)){
      	 return new Teacher();
      }
      return new Director();
}


console.log(createEmployee(200));
Teacher
console.log(createEmployee(1000));
Director
console.log(createEmployee('$500'));
Director
